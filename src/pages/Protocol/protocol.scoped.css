/* Added by https://github.com/positivecrash */

/* + global (now used only in this component) */
/* You can move some of these styles to the app global styles or make a components from this in future */

/* + global input */
input, select {
  background-color: var(--input-bg);
  border-color: var(--input-border-color);
  border-radius: var(--input-border-radius);
  border-style: solid;
  border-width: var(--input-border-width);
  color: var(--input-text-color);
  font-family: var(--font-family-primary);
  padding: var(--input-padding);
}


.checkbox {
  display: block;
  height: 1.7rem;
  margin: 0.5rem auto;
  position: relative;
  width: 1.7rem;
}

.checkbox label {
  cursor: pointer;
}

.checkbox input[type=checkbox] {
  appearance: none;
  display: block;
  height: 100%;
  width: 100%;
}

.checkbox input[type=checkbox]:checked {
  --input-border-color: var(--color-light-purple);
}

.checkbox input[type=checkbox] + label {
  display: block;
  left: 0.2rem;
  opacity: 0;
  position: absolute;
  top: calc(50% - 0.7rem);
  width: 100%;
}

.checkbox input[type=checkbox]:checked + label {
  opacity: 1;
}


.width-ch2, .width-ch6 {
  box-sizing: content-box;
}

.width-ch2 {
  width: calc(var(--font-size-primary) * 2);
  width: 2ch;
}

.width-ch6 {
  width: calc(var(--font-size-primary) * 6);
  width: 6ch;
}
/* - global input */

/* + global table */
table {
  --table-border-width: 1px;
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
}

table td, table th {
  border: var(--table-border-width) solid var(--color-text-primary);
  padding: calc(var(--gap) * 0.5);
}

table th {
  /* background-color: var(--color-gray-light); */
  font-weight: normal;
  text-align: left;
}
/* - global table */

.nowrap { white-space: nowrap; }

.link {
  color: var(--color-strong-purple);
  text-decoration: underline;
}

/* - global */


/* + header layout, bottom control shared styles */
.protocol-header, .protocol-controls {
  background-color: var(--color-bg-primary);
  padding: var(--gap) 0;
  position: sticky;
  z-index: 100;
}


/* + header layout */
.protocol-header {
  top: 0;
  padding: calc(var(--gap) * 3) 0;
}

.protocol-header-content {
  display: flex;
  gap: var(--gap);
  justify-content: space-between;
  align-items: start;
}
/* - header layout */


/* + header title */
.protocol-header-title {
  text-align: center;
}

.protocol-header-title h1 {
  margin-bottom: var(--gap);
}

.protocol-header-title-detail {
  margin-bottom: calc(var(--gap) * 0.5);
  margin-left: auto;
  margin-right: auto;
  max-width: 800px;
}

.label {
  background-color: var(--color-strong-purple);
  color: var(--color-light);
  padding: 5px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  font-size: 12px;
  z-index: 1000;
  text-align: center;
  font-weight: bold;
}
/* - header title */

/* + bottom control */
.protocol-controls {
  bottom: 0;
  display: flex;
  gap: var(--gap);
  justify-content: space-between;
}

.protocol-controls-section {
  align-items: center;
  display: flex;
  gap: var(--gap);
}

.protocol-controls-section:last-child {
  justify-content: flex-end;
}

.protocol-status {
  font-weight: bold;
}

.protocol-status-title {
  display: block;
}
/* - bottom control */


/* + content */
.protocol-contentblock:not(:last-child) {
  margin-bottom: var(--layout-padding);
}

.protocol-tablecell-input {
  padding: 0;
  position: relative;
}

.protocol-tablecell-input input:not([disabled]) {
  --input-bg: transparent;
  --input-border-radius: 0;
  --input-border-width: 0px;
  height: 100%;
  left: var(--table-border-width);
  position: absolute;
  top: var(--table-border-width);
  width: 100%;
}

.protocol-tablecell-input input:focus:not([disabled]) {
  --input-border-color: var(--color-strong-purple);
  --input-bg: var(--color-light);
  --input-border-width: 1px;
  --input-border-radius: 0;
}

.protocol-tablecell-input input:placeholder-shown {
  --input-bg: var(--color-light-purple);
}

.protocol-contentblock tr.checked {
  background-color: var(--color-green);
}

.protocol-contentblock tr.checked input[type=checkbox] {
  --input-bg: var(--color-green);
}

.protocol-contentblock tr.checked input[type=checkbox]:hover {
  --input-bg: var(--color-light);
}
/* - content */


/* + print */
.print-only {
  display: none;
}

.screen-only {
  display: initial;
}

@media print {

  @page { size: auto;  margin: 0mm; }

  .print-only {
    display: initial;
  }

  .screen-only {
    display: none;
  }

  .print:last-child {
      page-break-after: auto;
  }

  :root {
    --input-border-width: 0;
    --input-border-color: transparent;
    appearance: none;
    padding: 0;
  }

  .app-content {
    padding: 10px;
  }

  .protocol-header {
    padding-top: 0;
  }

  .protocol-header-content {
    display: block;
    width: 100%;
  }

  .protocol-header-title {
    text-align: left;
    font-size: 16px;
  }
  
  .protocol-header-title h1 {
    font-size: 25px
  }

  .protocol-header-title-detail {
    margin-left: 0;
    margin-bottom: 20px;
    max-width: 50%;
  }

  .protocol-controls {
    display: none;
  }

  .protocol-tablecell-input {
    padding: calc(var(--gap) * 0.5);
  }

  .protocol-contentblock table, .protocol-contentblock table input {
    font-size: 11px !important;
  }

  .protocol-contentblock table tr td:not(:first-child), .protocol-contentblock table tr td:not(:first-child) input {
    font-size: 9px !important;
  }

  .protocol-status-title {
    display: inline;
  }
}
/* - print */